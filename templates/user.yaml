authz:

    # # policies automatically given to anyone, even if they are not authenticated
    # anonymous_policies:
    # - open_data_reader

    # # policies automatically given to authenticated users (in addition to their other policies)
    # all_users_policies: []

    # groups:
    # # can CRUD programs and projects and upload data files
    # - name: data_submitters
    #   policies:
    #   - services.sheepdog-admin
    #   - data_upload
    #   users:
    #   - username1@gmail.com

    #  # can create/update/delete indexd records
    # - name: indexd_admins
    #   policies:
    #   - indexd_admin
    #   users:
    #   - username1@gmail.com

    resources:
        - name: 'data_file'
          description: 'data files, stored in S3'
        - name: 'sower'
          description: 'sower resource'
        - name: workspace
          description: jupyter notebooks
        - name: analysis
          description: analysis tool service
        - name: portal
          description: data portal service
        - name: privacy
          description: User privacy policy
        - name: 'services'
          subresources:
          - name: 'sheepdog'
            subresources:
            - name: 'submission'
              subresources:
              - name: 'program'
              - name: 'project'
          - name: 'amanuensis'
        - name: programs
          subresources:
          - name: pcdc
            


    policies:
      - id: 'data_upload'
        description: 'upload raw data files to S3'
        resource_paths: 
        - /data_file
        role_ids: 
        - file_uploader
      - id: 'services.amanuensis-admin'
        description: 'admin access to amanunsis'
        role_ids:
          - 'amanuensis_admin'
        resource_paths:
          - '/services/amanuensis'
      - id: workspace
        description: be able to use workspace
        resource_paths: 
        - /workspace
        role_ids: 
        - workspace_user
      - id: analysis
        description: be able to use analysis tool service
        resource_paths: 
        - /analysis
        role_ids: 
        - analysis_user
      - id: privacy_policy
        description:  User agreed on the privacy policy
        resource_paths:
          - /privacy
        role_ids:
          - reader
      - id: indexd_admin
        description: full access to indexd API
        role_ids:
          - indexd_admin
        resource_paths:
          - /programs
      - description: be able to use sower job
        id: sower
        resource_paths: [/sower]
        role_ids: [sower_user]
      - id: 'services.sheepdog-admin'
        description: 'CRUD access to programs and projects'
        role_ids:
          - 'sheepdog_admin'
        resource_paths:
          - '/services/sheepdog/submission/program'
          - '/services/sheepdog/submission/project'
      - id: all_programs_reader
        role_ids:
        - reader
        - storage_reader
        resource_paths:
        - /programs
      # - id: 'basic_user_policy'
      #   description: 'Policy assigned to any user after executing authentication and registering through the user login form'
      #   role_ids:
      #     - basic_user
      #   resource_paths:
      # - id: MyFirstProject_submitter
      #   role_ids:
      #   - reader
      #   - creator
      #   - updater
      #   - deleter
      #   - storage_reader
      #   - storage_writer
      #   resource_paths:
      #   - /programs/MyFirstProgram/projects/MyFirstProject
      - id: login_no_access
        role_ids:
        - reader
        resource_paths:
        - /portal
      - id: 'data_admin'
        description: 'policy test, should write a policy per resource and assign to user in order to avoid duplicating policies'
        role_ids:
          - admin
        resource_paths:
          - /programs
          - /programs/pcdc


 
    roles:
      - id: 'file_uploader'
        description: 'can upload data files'
        permissions:
          - id: 'file_upload'
            action:
                service: 'fence'
                method: 'file_upload'
      - id: 'amanuensis_admin'
        description: 'can do admin work on project/data request'
        permissions:
          - id: 'amanuensis_admin_action'
            action: 
                service: 'amanuensis'
                method: '*'
      - id: workspace_user
        permissions:
        - action: {method: access, service: jupyterhub}
          id: workspace_access
      - id: sower_user
        permissions:
        - action: {method: access, service: job}
          id: sower_access
      - id: analysis_user
        permissions:
        - action: {method: access, service: analysis}
          id: analysis_access
      # Sheepdog admin role
      - id: 'sheepdog_admin'
        description: 'sheepdog admin role for program project crud'
        permissions:
          - id: 'sheepdog_admin_action'
            action:
              service: 'sheepdog'
              method: '*'
      - id: indexd_admin
        description: full access to indexd API
        permissions:
        - id: indexd_admin
          action:
            service: indexd
            method: '*'
      - id: admin
        permissions:
          - id: admin
            action:
              service: '*'
              method: '*'
      - id: creator
        permissions:
          - id: creator
            action:
              service: '*'
              method: create
      - id: reader
        permissions:
          - id: reader
            action:
              service: '*'
              method: read
      - id: updater
        permissions:
          - id: updater
            action:
              service: '*'
              method: update
      - id: deleter
        permissions:
          - id: deleter
            action:
              service: '*'
              method: delete
      - id: storage_writer
        permissions:
          - id: storage_creator
            action:
              service: '*'
              method: write-storage
      - id: storage_reader
        permissions:
          - id: storage_reader
            action:
              service: '*'
              method: read-storage  


# clients:
#   wts:
#     policies:
#     - all_programs_reader
#     - open_data_reader

users:
  # username1@gmail.com: {}
  graglia01@gmail.com:
    admin: True
    policies: ['data_upload', 'workspace', services.sheepdog-admin, services.amanuensis-admin, data_admin, analysis, privacy_policy, login_no_access, sower]
  shea.maunsell@gmail.com:
    policies: [analysis, login_no_access]
  slv@uchicago.edu:
    policies: ['data_upload', 'workspace', services.sheepdog-admin, data_admin, analysis, privacy_policy, login_no_access, sower]
  furner.brian@gmail.com:
    policies: ['data_upload', 'workspace', services.sheepdog-admin, data_admin, analysis, privacy_policy, login_no_access, sower]
  bkang.dev@gmail.com:
    admin: True
    policies: ['data_upload', 'workspace', services.sheepdog-admin, services.amanuensis-admin, data_admin, analysis, login_no_access, sower]
  jooholee@uchicago.edu:
    admin: True
    policies: ['data_upload', 'workspace', services.sheepdog-admin, data_admin, analysis, privacy_policy, login_no_access, sower]
  # username2:
  #   tags:
  #     name: John Doe
  #     email: johndoe@gmail.com
  #   policies:
  #   - MyFirstProject_submitter


# for instruction visit: https://github.com/uc-cdis/fence/blob/master/docs/user.yaml_guide.md
