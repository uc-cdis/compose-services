version: '3'
services:
  postgres:
    image: postgres:9.5
    networks:
      - devnet
    volumes:
      - "psqldata:/var/lib/postgresql/data"
      - "./scripts/postgres_init.sql:/docker-entrypoint-initdb.d/postgres_init.sql"
    restart: unless-stopped
    ports:
      - 5432:5432
  indexd-service:
    image: "quay.io/cdis/indexd:master"
    command: bash indexd_setup.sh
    container_name: indexd-service
    networks:
      - devnet
    volumes:
      - ./apis_configs/indexd_settings.py:/var/www/indexd/local_settings.py
      - ./apis_configs/indexd_creds.json:/var/www/indexd/creds.json
      - ./apis_configs/config_helper.py:/var/www/indexd/config_helper.py
      - ./scripts/indexd_setup.sh:/var/www/indexd/indexd_setup.sh
    depends_on:
      - postgres
  fence-service:
    image: "quay.io/cdis/fence:master"
    command: bash /var/www/fence/fence_setup.sh
    container_name: fence-service
    networks:
      - devnet
    volumes:
      - ./apis_configs/fence_settings.py:/var/www/fence/local_settings.py
      - ./apis_configs/fence_creds.json:/var/www/fence/creds.json
      - ./apis_configs/config_helper.py:/var/www/fence/config_helper.py
      - ./apis_configs/fence_credentials.json:/var/www/fence/fence_credentials.json
      - ./apis_configs/user.yaml:/var/www/fence/user.yaml
      - ./temp_creds/service.crt:/usr/local/share/ca-certificates/cdis-ca.crt
      - ./temp_keys:/fence/keys
      - ./scripts/fence_setup.sh:/var/www/fence/fence_setup.sh
    environment:
      - PYTHONPATH=/var/www/fence
    depends_on:
      - postgres
  peregrine-service:
    image: "quay.io/cdis/peregrine:master"
    container_name: peregrine-service
    networks:
      - devnet
    volumes:
      - ./apis_configs/peregrine_settings.py:/var/www/peregrine/wsgi.py
      - ./apis_configs/peregrine_creds.json:/var/www/peregrine/creds.json
      - ./apis_configs/config_helper.py:/var/www/peregrine/config_helper.py
      - ./temp_creds/service.crt:/usr/local/share/ca-certificates/cdis-ca.crt
      - ./scripts/peregrine_setup.sh:/peregrine_setup.sh
      - ./example-schemas:/schemas_dir
    environment: &env
      DICTIONARY_URL: https://s3.amazonaws.com/dictionary-artifacts/datadictionary/develop/schema.json
      # PATH_TO_SCHEMA_DIR: /schemas_dir
      REQUESTS_CA_BUNDLE: /etc/ssl/certs/ca-certificates.crt
    depends_on:
      - postgres
      - sheepdog-service
  sheepdog-service:
    image: "quay.io/cdis/sheepdog:master"
    command: bash /sheepdog_setup.sh
    container_name: sheepdog-service
    networks:
      - devnet
    volumes:
      - ./apis_configs/sheepdog_settings.py:/var/www/sheepdog/wsgi.py
      - ./apis_configs/sheepdog_creds.json:/var/www/sheepdog/creds.json
      - ./apis_configs/config_helper.py:/var/www/sheepdog/config_helper.py
      - ./scripts/sheepdog_setup.sh:/sheepdog_setup.sh
      - ./example-schemas:/schemas_dir
    environment: *env
    depends_on:
      - postgres
  portal-service:
    image: "quay.io/cdis/data-portal:master"
    container_name: portal-service
    command: ["bash", "/var/www/data-portal/waitForContainers.sh"]
    networks:
      - devnet
    volumes:
      - ./scripts/waitForContainers.sh:/var/www/data-portal/waitForContainers.sh
    environment:
      - NODE_ENV=dev
      - MOCK_STORE=true
      - APP=dev
      - GDC_SUBPATH=http://revproxy-service/api/v0/submission/
    depends_on:
      - postgres
      - peregrine-service
      - sheepdog-service
  revproxy-service:
    image: "nginx:1.14"
    container_name: revproxy-service
    networks:
      - devnet
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./temp_creds/service.crt:/etc/nginx/ssl/nginx.crt
      - ./temp_creds/service.key:/etc/nginx/ssl/nginx.key
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - indexd-service
      - peregrine-service
      - sheepdog-service
      - fence-service
      - portal-service
networks:
  devnet:
volumes:
  psqldata:
